# change default source file keybind 
unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-q
set -g mouse on
setw -g mouse on
set -g set-clipboard on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -gq allow-passthrough on
set -g visual-activity off

# use vim motion
setw -g mode-keys vi

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key 'C-h' previous-window
bind-key 'C-l' next-window

bind-key 'C-j' switch-client -n
bind-key 'C-k' switch-client -p

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'alexwforsythe/tmux-which-key'
set -g @plugin 'jimeh/tmuxifier'

# terminal-overrides
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set-option -sg escape-time 10

# catppuccin theme
set -g @catppuccin_window_left_separator "ÓÇ∂"
set -g @catppuccin_window_right_separator "ÓÇ¥¬†"
set -g @catppuccin_window_middle_separator " ‚ñà"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

# change battery to custom RAM
set -g @catppuccin_battery_text "RAM: #(free -g | awk '/Mem:/ {print $3\"GB/\"$2\"GB\"}')"
set -g @catppuccin_battery_icon "‚ö°"
set -g @catppuccin_battery_color "#{thm_magenta}"

# change clima to custom disk usage
set -g @catppuccin_clima_text "Disk: #(df -h / | awk 'NR==2 {print $5}') "
set -g @catppuccin_clima_icon "üìÇ"
set -g @catppuccin_clima_color "#{thm_blue}"

# change default cpu to custom cpu
set -g @catppuccin_cpu_text "CPU: #(grep 'cpu ' /proc/stat | awk '{usage=int(($2+$4)*100/($2+$4+$5)); print usage \"%\"}')"
set -g @catppuccin_cpu_icon "üíª"
set -g @catppuccin_cpu_color "#{thm_cyan}"

# change weather to custom gpu usage
set -g @catppuccin_weather_text "GPU: #(nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits | awk '{print $1 \"%\"}')"
set -g @catppuccin_weather_icon "üéÆ"
set -g @catppuccin_weather_color "#{thm_green}"

set -g @catppuccin_status_modules_right "pomodoro_plus battery clima"
set -g @catppuccin_status_left_separator  " ÓÇ∂"
set -g @catppuccin_status_right_separator "ÓÇ¥"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_status_default "on"
set -g @catppuccin_status_default "on"
set -g @catppuccin_status_background "default"
set -g status-bg default
set -g status-style bg=default
set -g status-position top

set -g @resurrect-capture-pane-contents 'on'

# automatically restore tmux session
set -g @continuum-restore 'off'

# automatically save every 5 minutes tmux session
set -g @continuum-boot 'on'
set -g @continuum-save-interval '0'

# Use xclip to copy to system clipboard
set-option -g set-clipboard on
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clip"

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel "xclip -selection clip"
bind -T copy-mode-vi Enter send-keys -X copy-selection-and-cancel

bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# pomodoro options
set -g @pomodoro_toggle 'p'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 25                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 4                   # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 25            # The duration of the long break
set -g @pomodoro_repeat 'off'                  # Automatically repeat the Pomodoros?
set -g @pomodoro_disable_breaks 'off'          # Turn off breaks

set -g @pomodoro_on "ÔÄó "                      # The formatted output when the Pomodoro is running
set -g @pomodoro_complete "‚úîÔ∏é "                 # The formatted output when the break is running
set -g @pomodoro_pause "ÔÅå "                    # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break "‚è≤Ô∏é break? "      # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro "‚è±Ô∏é start? "   # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"             # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'                   # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on'           # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'             # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)
set -g status-interval 1                       # Refresh the status line every second

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
